Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMILLA
    ESPACIO
    NUMERAL
    PARKING

Grammar

Rule 0     S' -> program
Rule 1     program -> block
Rule 2     block -> constDec1 varDec1 procDec1 statement
Rule 3     constDec1 -> DR constAssignmentList PUNTOCOMA
Rule 4     constDec1 -> empty
Rule 5     constAssignmentList -> ID ACTUALI NUMERO
Rule 6     constAssignmentList -> constAssignmentList COMA constAssignmentList
Rule 7     varDec1 -> METRO identList PUNTOCOMA
Rule 8     varDec1 -> empty
Rule 9     identList -> ID
Rule 10    identList -> ID ACTUALI NUMERO
Rule 11    identList -> identList COMA identList
Rule 12    procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA
Rule 13    procDec1 -> empty
Rule 14    statementList -> statement
Rule 15    statementList -> statementList PUNTOCOMA statement
Rule 16    statement -> ID ACTUALI expression
Rule 17    statement -> KNT ID
Rule 18    statement -> HF statementList GG
Rule 19    statement -> YF condition LLAVEI statement LLAVED
Rule 20    statement -> MIENTRAS condition LLAVEI statement LLAVED
Rule 21    statement -> empty
Rule 22    condition -> IMPAR expression
Rule 23    condition -> expression relation expression
Rule 24    relation -> IGUAL
Rule 25    relation -> DISTINTO
Rule 26    relation -> MENOR
Rule 27    relation -> MAYOR
Rule 28    relation -> MENORI
Rule 29    relation -> MAYORI
Rule 30    expression -> term
Rule 31    expression -> addingOperator term
Rule 32    expression -> expression addingOperator term
Rule 33    addingOperator -> SUMA
Rule 34    addingOperator -> MENOS
Rule 35    term -> factor
Rule 36    term -> term multiplyingOperator factor
Rule 37    multiplyingOperator -> MULTI
Rule 38    multiplyingOperator -> DIVIDIR
Rule 39    factor -> ID
Rule 40    factor -> NUMERO
Rule 41    factor -> PARENTI expression PARENTD
Rule 42    empty -> <empty>

Terminals, with rules where they appear

ACTUALI              : 5 10 16
COMA                 : 6 11
COMILLA              : 
DISTINTO             : 25
DIVIDIR              : 38
DR                   : 3
ESPACIO              : 
GG                   : 18
HF                   : 18
ID                   : 5 9 10 12 16 17 39
IGUAL                : 24
IMPAR                : 22
KNT                  : 17
LLAVED               : 19 20
LLAVEI               : 19 20
MAYOR                : 27
MAYORI               : 29
MENOR                : 26
MENORI               : 28
MENOS                : 34
METRO                : 7
MIENTRAS             : 20
MOP                  : 12
MULTI                : 37
NUMERAL              : 
NUMERO               : 5 10 40
PARENTD              : 41
PARENTI              : 41
PARKING              : 
PUNTOCOMA            : 3 7 12 12 15
SUMA                 : 33
YF                   : 19
error                : 

Nonterminals, with rules where they appear

addingOperator       : 31 32
block                : 1 12
condition            : 19 20
constAssignmentList  : 3 6 6
constDec1            : 2
empty                : 4 8 13 21
expression           : 16 22 23 23 32 41
factor               : 35 36
identList            : 7 11 11
multiplyingOperator  : 36
procDec1             : 2 12
program              : 0
relation             : 23
statement            : 2 14 15 19 20
statementList        : 15 18
term                 : 30 31 32 36
varDec1              : 2

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block
    (2) block -> . constDec1 varDec1 procDec1 statement
    (3) constDec1 -> . DR constAssignmentList PUNTOCOMA
    (4) constDec1 -> . empty
    (42) empty -> .

    DR              shift and go to state 4
    METRO           reduce using rule 42 (empty -> .)
    MOP             reduce using rule 42 (empty -> .)
    ID              reduce using rule 42 (empty -> .)
    KNT             reduce using rule 42 (empty -> .)
    HF              reduce using rule 42 (empty -> .)
    YF              reduce using rule 42 (empty -> .)
    MIENTRAS        reduce using rule 42 (empty -> .)
    $end            reduce using rule 42 (empty -> .)

    program                        shift and go to state 1
    block                          shift and go to state 2
    constDec1                      shift and go to state 3
    empty                          shift and go to state 5

state 1

    (0) S' -> program .



state 2

    (1) program -> block .

    $end            reduce using rule 1 (program -> block .)


state 3

    (2) block -> constDec1 . varDec1 procDec1 statement
    (7) varDec1 -> . METRO identList PUNTOCOMA
    (8) varDec1 -> . empty
    (42) empty -> .

    METRO           shift and go to state 7
    MOP             reduce using rule 42 (empty -> .)
    ID              reduce using rule 42 (empty -> .)
    KNT             reduce using rule 42 (empty -> .)
    HF              reduce using rule 42 (empty -> .)
    YF              reduce using rule 42 (empty -> .)
    MIENTRAS        reduce using rule 42 (empty -> .)
    $end            reduce using rule 42 (empty -> .)
    PUNTOCOMA       reduce using rule 42 (empty -> .)

    varDec1                        shift and go to state 6
    empty                          shift and go to state 8

state 4

    (3) constDec1 -> DR . constAssignmentList PUNTOCOMA
    (5) constAssignmentList -> . ID ACTUALI NUMERO
    (6) constAssignmentList -> . constAssignmentList COMA constAssignmentList

    ID              shift and go to state 10

    constAssignmentList            shift and go to state 9

state 5

    (4) constDec1 -> empty .

    METRO           reduce using rule 4 (constDec1 -> empty .)
    MOP             reduce using rule 4 (constDec1 -> empty .)
    ID              reduce using rule 4 (constDec1 -> empty .)
    KNT             reduce using rule 4 (constDec1 -> empty .)
    HF              reduce using rule 4 (constDec1 -> empty .)
    YF              reduce using rule 4 (constDec1 -> empty .)
    MIENTRAS        reduce using rule 4 (constDec1 -> empty .)
    $end            reduce using rule 4 (constDec1 -> empty .)
    PUNTOCOMA       reduce using rule 4 (constDec1 -> empty .)


state 6

    (2) block -> constDec1 varDec1 . procDec1 statement
    (12) procDec1 -> . procDec1 MOP ID PUNTOCOMA block PUNTOCOMA
    (13) procDec1 -> . empty
    (42) empty -> .

    MOP             reduce using rule 42 (empty -> .)
    ID              reduce using rule 42 (empty -> .)
    KNT             reduce using rule 42 (empty -> .)
    HF              reduce using rule 42 (empty -> .)
    YF              reduce using rule 42 (empty -> .)
    MIENTRAS        reduce using rule 42 (empty -> .)
    $end            reduce using rule 42 (empty -> .)
    PUNTOCOMA       reduce using rule 42 (empty -> .)

    procDec1                       shift and go to state 11
    empty                          shift and go to state 12

state 7

    (7) varDec1 -> METRO . identList PUNTOCOMA
    (9) identList -> . ID
    (10) identList -> . ID ACTUALI NUMERO
    (11) identList -> . identList COMA identList

    ID              shift and go to state 14

    identList                      shift and go to state 13

state 8

    (8) varDec1 -> empty .

    MOP             reduce using rule 8 (varDec1 -> empty .)
    ID              reduce using rule 8 (varDec1 -> empty .)
    KNT             reduce using rule 8 (varDec1 -> empty .)
    HF              reduce using rule 8 (varDec1 -> empty .)
    YF              reduce using rule 8 (varDec1 -> empty .)
    MIENTRAS        reduce using rule 8 (varDec1 -> empty .)
    $end            reduce using rule 8 (varDec1 -> empty .)
    PUNTOCOMA       reduce using rule 8 (varDec1 -> empty .)


state 9

    (3) constDec1 -> DR constAssignmentList . PUNTOCOMA
    (6) constAssignmentList -> constAssignmentList . COMA constAssignmentList

    PUNTOCOMA       shift and go to state 15
    COMA            shift and go to state 16


state 10

    (5) constAssignmentList -> ID . ACTUALI NUMERO

    ACTUALI         shift and go to state 17


state 11

    (2) block -> constDec1 varDec1 procDec1 . statement
    (12) procDec1 -> procDec1 . MOP ID PUNTOCOMA block PUNTOCOMA
    (16) statement -> . ID ACTUALI expression
    (17) statement -> . KNT ID
    (18) statement -> . HF statementList GG
    (19) statement -> . YF condition LLAVEI statement LLAVED
    (20) statement -> . MIENTRAS condition LLAVEI statement LLAVED
    (21) statement -> . empty
    (42) empty -> .

    MOP             shift and go to state 19
    ID              shift and go to state 20
    KNT             shift and go to state 21
    HF              shift and go to state 22
    YF              shift and go to state 23
    MIENTRAS        shift and go to state 24
    $end            reduce using rule 42 (empty -> .)
    PUNTOCOMA       reduce using rule 42 (empty -> .)

    statement                      shift and go to state 18
    empty                          shift and go to state 25

state 12

    (13) procDec1 -> empty .

    MOP             reduce using rule 13 (procDec1 -> empty .)
    ID              reduce using rule 13 (procDec1 -> empty .)
    KNT             reduce using rule 13 (procDec1 -> empty .)
    HF              reduce using rule 13 (procDec1 -> empty .)
    YF              reduce using rule 13 (procDec1 -> empty .)
    MIENTRAS        reduce using rule 13 (procDec1 -> empty .)
    $end            reduce using rule 13 (procDec1 -> empty .)
    PUNTOCOMA       reduce using rule 13 (procDec1 -> empty .)


state 13

    (7) varDec1 -> METRO identList . PUNTOCOMA
    (11) identList -> identList . COMA identList

    PUNTOCOMA       shift and go to state 26
    COMA            shift and go to state 27


state 14

    (9) identList -> ID .
    (10) identList -> ID . ACTUALI NUMERO

    PUNTOCOMA       reduce using rule 9 (identList -> ID .)
    COMA            reduce using rule 9 (identList -> ID .)
    ACTUALI         shift and go to state 28


state 15

    (3) constDec1 -> DR constAssignmentList PUNTOCOMA .

    METRO           reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)
    MOP             reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)
    ID              reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)
    KNT             reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)
    HF              reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)
    YF              reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)
    MIENTRAS        reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)
    $end            reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)


state 16

    (6) constAssignmentList -> constAssignmentList COMA . constAssignmentList
    (5) constAssignmentList -> . ID ACTUALI NUMERO
    (6) constAssignmentList -> . constAssignmentList COMA constAssignmentList

    ID              shift and go to state 10

    constAssignmentList            shift and go to state 29

state 17

    (5) constAssignmentList -> ID ACTUALI . NUMERO

    NUMERO          shift and go to state 30


state 18

    (2) block -> constDec1 varDec1 procDec1 statement .

    $end            reduce using rule 2 (block -> constDec1 varDec1 procDec1 statement .)
    PUNTOCOMA       reduce using rule 2 (block -> constDec1 varDec1 procDec1 statement .)


state 19

    (12) procDec1 -> procDec1 MOP . ID PUNTOCOMA block PUNTOCOMA

    ID              shift and go to state 31


state 20

    (16) statement -> ID . ACTUALI expression

    ACTUALI         shift and go to state 32


state 21

    (17) statement -> KNT . ID

    ID              shift and go to state 33


state 22

    (18) statement -> HF . statementList GG
    (14) statementList -> . statement
    (15) statementList -> . statementList PUNTOCOMA statement
    (16) statement -> . ID ACTUALI expression
    (17) statement -> . KNT ID
    (18) statement -> . HF statementList GG
    (19) statement -> . YF condition LLAVEI statement LLAVED
    (20) statement -> . MIENTRAS condition LLAVEI statement LLAVED
    (21) statement -> . empty
    (42) empty -> .

    ID              shift and go to state 20
    KNT             shift and go to state 21
    HF              shift and go to state 22
    YF              shift and go to state 23
    MIENTRAS        shift and go to state 24
    GG              reduce using rule 42 (empty -> .)
    PUNTOCOMA       reduce using rule 42 (empty -> .)

    statementList                  shift and go to state 34
    statement                      shift and go to state 35
    empty                          shift and go to state 25

state 23

    (19) statement -> YF . condition LLAVEI statement LLAVED
    (22) condition -> . IMPAR expression
    (23) condition -> . expression relation expression
    (30) expression -> . term
    (31) expression -> . addingOperator term
    (32) expression -> . expression addingOperator term
    (35) term -> . factor
    (36) term -> . term multiplyingOperator factor
    (33) addingOperator -> . SUMA
    (34) addingOperator -> . MENOS
    (39) factor -> . ID
    (40) factor -> . NUMERO
    (41) factor -> . PARENTI expression PARENTD

    IMPAR           shift and go to state 37
    SUMA            shift and go to state 42
    MENOS           shift and go to state 43
    ID              shift and go to state 44
    NUMERO          shift and go to state 45
    PARENTI         shift and go to state 46

    condition                      shift and go to state 36
    expression                     shift and go to state 38
    term                           shift and go to state 39
    addingOperator                 shift and go to state 40
    factor                         shift and go to state 41

state 24

    (20) statement -> MIENTRAS . condition LLAVEI statement LLAVED
    (22) condition -> . IMPAR expression
    (23) condition -> . expression relation expression
    (30) expression -> . term
    (31) expression -> . addingOperator term
    (32) expression -> . expression addingOperator term
    (35) term -> . factor
    (36) term -> . term multiplyingOperator factor
    (33) addingOperator -> . SUMA
    (34) addingOperator -> . MENOS
    (39) factor -> . ID
    (40) factor -> . NUMERO
    (41) factor -> . PARENTI expression PARENTD

    IMPAR           shift and go to state 37
    SUMA            shift and go to state 42
    MENOS           shift and go to state 43
    ID              shift and go to state 44
    NUMERO          shift and go to state 45
    PARENTI         shift and go to state 46

    condition                      shift and go to state 47
    expression                     shift and go to state 38
    term                           shift and go to state 39
    addingOperator                 shift and go to state 40
    factor                         shift and go to state 41

state 25

    (21) statement -> empty .

    $end            reduce using rule 21 (statement -> empty .)
    PUNTOCOMA       reduce using rule 21 (statement -> empty .)
    GG              reduce using rule 21 (statement -> empty .)
    LLAVED          reduce using rule 21 (statement -> empty .)


state 26

    (7) varDec1 -> METRO identList PUNTOCOMA .

    MOP             reduce using rule 7 (varDec1 -> METRO identList PUNTOCOMA .)
    ID              reduce using rule 7 (varDec1 -> METRO identList PUNTOCOMA .)
    KNT             reduce using rule 7 (varDec1 -> METRO identList PUNTOCOMA .)
    HF              reduce using rule 7 (varDec1 -> METRO identList PUNTOCOMA .)
    YF              reduce using rule 7 (varDec1 -> METRO identList PUNTOCOMA .)
    MIENTRAS        reduce using rule 7 (varDec1 -> METRO identList PUNTOCOMA .)
    $end            reduce using rule 7 (varDec1 -> METRO identList PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 7 (varDec1 -> METRO identList PUNTOCOMA .)


state 27

    (11) identList -> identList COMA . identList
    (9) identList -> . ID
    (10) identList -> . ID ACTUALI NUMERO
    (11) identList -> . identList COMA identList

    ID              shift and go to state 14

    identList                      shift and go to state 48

state 28

    (10) identList -> ID ACTUALI . NUMERO

    NUMERO          shift and go to state 49


state 29

    (6) constAssignmentList -> constAssignmentList COMA constAssignmentList .
    (6) constAssignmentList -> constAssignmentList . COMA constAssignmentList

  ! shift/reduce conflict for COMA resolved as shift
    PUNTOCOMA       reduce using rule 6 (constAssignmentList -> constAssignmentList COMA constAssignmentList .)
    COMA            shift and go to state 16

  ! COMA            [ reduce using rule 6 (constAssignmentList -> constAssignmentList COMA constAssignmentList .) ]


state 30

    (5) constAssignmentList -> ID ACTUALI NUMERO .

    PUNTOCOMA       reduce using rule 5 (constAssignmentList -> ID ACTUALI NUMERO .)
    COMA            reduce using rule 5 (constAssignmentList -> ID ACTUALI NUMERO .)


state 31

    (12) procDec1 -> procDec1 MOP ID . PUNTOCOMA block PUNTOCOMA

    PUNTOCOMA       shift and go to state 50


state 32

    (16) statement -> ID ACTUALI . expression
    (30) expression -> . term
    (31) expression -> . addingOperator term
    (32) expression -> . expression addingOperator term
    (35) term -> . factor
    (36) term -> . term multiplyingOperator factor
    (33) addingOperator -> . SUMA
    (34) addingOperator -> . MENOS
    (39) factor -> . ID
    (40) factor -> . NUMERO
    (41) factor -> . PARENTI expression PARENTD

    SUMA            shift and go to state 42
    MENOS           shift and go to state 43
    ID              shift and go to state 44
    NUMERO          shift and go to state 45
    PARENTI         shift and go to state 46

    expression                     shift and go to state 51
    term                           shift and go to state 39
    addingOperator                 shift and go to state 40
    factor                         shift and go to state 41

state 33

    (17) statement -> KNT ID .

    $end            reduce using rule 17 (statement -> KNT ID .)
    PUNTOCOMA       reduce using rule 17 (statement -> KNT ID .)
    GG              reduce using rule 17 (statement -> KNT ID .)
    LLAVED          reduce using rule 17 (statement -> KNT ID .)


state 34

    (18) statement -> HF statementList . GG
    (15) statementList -> statementList . PUNTOCOMA statement

    GG              shift and go to state 52
    PUNTOCOMA       shift and go to state 53


state 35

    (14) statementList -> statement .

    GG              reduce using rule 14 (statementList -> statement .)
    PUNTOCOMA       reduce using rule 14 (statementList -> statement .)


state 36

    (19) statement -> YF condition . LLAVEI statement LLAVED

    LLAVEI          shift and go to state 54


state 37

    (22) condition -> IMPAR . expression
    (30) expression -> . term
    (31) expression -> . addingOperator term
    (32) expression -> . expression addingOperator term
    (35) term -> . factor
    (36) term -> . term multiplyingOperator factor
    (33) addingOperator -> . SUMA
    (34) addingOperator -> . MENOS
    (39) factor -> . ID
    (40) factor -> . NUMERO
    (41) factor -> . PARENTI expression PARENTD

    SUMA            shift and go to state 42
    MENOS           shift and go to state 43
    ID              shift and go to state 44
    NUMERO          shift and go to state 45
    PARENTI         shift and go to state 46

    expression                     shift and go to state 55
    term                           shift and go to state 39
    addingOperator                 shift and go to state 40
    factor                         shift and go to state 41

state 38

    (23) condition -> expression . relation expression
    (32) expression -> expression . addingOperator term
    (24) relation -> . IGUAL
    (25) relation -> . DISTINTO
    (26) relation -> . MENOR
    (27) relation -> . MAYOR
    (28) relation -> . MENORI
    (29) relation -> . MAYORI
    (33) addingOperator -> . SUMA
    (34) addingOperator -> . MENOS

    IGUAL           shift and go to state 58
    DISTINTO        shift and go to state 59
    MENOR           shift and go to state 60
    MAYOR           shift and go to state 61
    MENORI          shift and go to state 62
    MAYORI          shift and go to state 63
    SUMA            shift and go to state 42
    MENOS           shift and go to state 43

    relation                       shift and go to state 56
    addingOperator                 shift and go to state 57

state 39

    (30) expression -> term .
    (36) term -> term . multiplyingOperator factor
    (37) multiplyingOperator -> . MULTI
    (38) multiplyingOperator -> . DIVIDIR

    IGUAL           reduce using rule 30 (expression -> term .)
    DISTINTO        reduce using rule 30 (expression -> term .)
    MENOR           reduce using rule 30 (expression -> term .)
    MAYOR           reduce using rule 30 (expression -> term .)
    MENORI          reduce using rule 30 (expression -> term .)
    MAYORI          reduce using rule 30 (expression -> term .)
    SUMA            reduce using rule 30 (expression -> term .)
    MENOS           reduce using rule 30 (expression -> term .)
    $end            reduce using rule 30 (expression -> term .)
    PUNTOCOMA       reduce using rule 30 (expression -> term .)
    GG              reduce using rule 30 (expression -> term .)
    LLAVED          reduce using rule 30 (expression -> term .)
    LLAVEI          reduce using rule 30 (expression -> term .)
    PARENTD         reduce using rule 30 (expression -> term .)
    MULTI           shift and go to state 65
    DIVIDIR         shift and go to state 66

    multiplyingOperator            shift and go to state 64

state 40

    (31) expression -> addingOperator . term
    (35) term -> . factor
    (36) term -> . term multiplyingOperator factor
    (39) factor -> . ID
    (40) factor -> . NUMERO
    (41) factor -> . PARENTI expression PARENTD

    ID              shift and go to state 44
    NUMERO          shift and go to state 45
    PARENTI         shift and go to state 46

    term                           shift and go to state 67
    factor                         shift and go to state 41

state 41

    (35) term -> factor .

    MULTI           reduce using rule 35 (term -> factor .)
    DIVIDIR         reduce using rule 35 (term -> factor .)
    IGUAL           reduce using rule 35 (term -> factor .)
    DISTINTO        reduce using rule 35 (term -> factor .)
    MENOR           reduce using rule 35 (term -> factor .)
    MAYOR           reduce using rule 35 (term -> factor .)
    MENORI          reduce using rule 35 (term -> factor .)
    MAYORI          reduce using rule 35 (term -> factor .)
    SUMA            reduce using rule 35 (term -> factor .)
    MENOS           reduce using rule 35 (term -> factor .)
    $end            reduce using rule 35 (term -> factor .)
    PUNTOCOMA       reduce using rule 35 (term -> factor .)
    GG              reduce using rule 35 (term -> factor .)
    LLAVED          reduce using rule 35 (term -> factor .)
    LLAVEI          reduce using rule 35 (term -> factor .)
    PARENTD         reduce using rule 35 (term -> factor .)


state 42

    (33) addingOperator -> SUMA .

    ID              reduce using rule 33 (addingOperator -> SUMA .)
    NUMERO          reduce using rule 33 (addingOperator -> SUMA .)
    PARENTI         reduce using rule 33 (addingOperator -> SUMA .)


state 43

    (34) addingOperator -> MENOS .

    ID              reduce using rule 34 (addingOperator -> MENOS .)
    NUMERO          reduce using rule 34 (addingOperator -> MENOS .)
    PARENTI         reduce using rule 34 (addingOperator -> MENOS .)


state 44

    (39) factor -> ID .

    MULTI           reduce using rule 39 (factor -> ID .)
    DIVIDIR         reduce using rule 39 (factor -> ID .)
    IGUAL           reduce using rule 39 (factor -> ID .)
    DISTINTO        reduce using rule 39 (factor -> ID .)
    MENOR           reduce using rule 39 (factor -> ID .)
    MAYOR           reduce using rule 39 (factor -> ID .)
    MENORI          reduce using rule 39 (factor -> ID .)
    MAYORI          reduce using rule 39 (factor -> ID .)
    SUMA            reduce using rule 39 (factor -> ID .)
    MENOS           reduce using rule 39 (factor -> ID .)
    $end            reduce using rule 39 (factor -> ID .)
    PUNTOCOMA       reduce using rule 39 (factor -> ID .)
    GG              reduce using rule 39 (factor -> ID .)
    LLAVED          reduce using rule 39 (factor -> ID .)
    LLAVEI          reduce using rule 39 (factor -> ID .)
    PARENTD         reduce using rule 39 (factor -> ID .)


state 45

    (40) factor -> NUMERO .

    MULTI           reduce using rule 40 (factor -> NUMERO .)
    DIVIDIR         reduce using rule 40 (factor -> NUMERO .)
    IGUAL           reduce using rule 40 (factor -> NUMERO .)
    DISTINTO        reduce using rule 40 (factor -> NUMERO .)
    MENOR           reduce using rule 40 (factor -> NUMERO .)
    MAYOR           reduce using rule 40 (factor -> NUMERO .)
    MENORI          reduce using rule 40 (factor -> NUMERO .)
    MAYORI          reduce using rule 40 (factor -> NUMERO .)
    SUMA            reduce using rule 40 (factor -> NUMERO .)
    MENOS           reduce using rule 40 (factor -> NUMERO .)
    $end            reduce using rule 40 (factor -> NUMERO .)
    PUNTOCOMA       reduce using rule 40 (factor -> NUMERO .)
    GG              reduce using rule 40 (factor -> NUMERO .)
    LLAVED          reduce using rule 40 (factor -> NUMERO .)
    LLAVEI          reduce using rule 40 (factor -> NUMERO .)
    PARENTD         reduce using rule 40 (factor -> NUMERO .)


state 46

    (41) factor -> PARENTI . expression PARENTD
    (30) expression -> . term
    (31) expression -> . addingOperator term
    (32) expression -> . expression addingOperator term
    (35) term -> . factor
    (36) term -> . term multiplyingOperator factor
    (33) addingOperator -> . SUMA
    (34) addingOperator -> . MENOS
    (39) factor -> . ID
    (40) factor -> . NUMERO
    (41) factor -> . PARENTI expression PARENTD

    SUMA            shift and go to state 42
    MENOS           shift and go to state 43
    ID              shift and go to state 44
    NUMERO          shift and go to state 45
    PARENTI         shift and go to state 46

    expression                     shift and go to state 68
    term                           shift and go to state 39
    addingOperator                 shift and go to state 40
    factor                         shift and go to state 41

state 47

    (20) statement -> MIENTRAS condition . LLAVEI statement LLAVED

    LLAVEI          shift and go to state 69


state 48

    (11) identList -> identList COMA identList .
    (11) identList -> identList . COMA identList

  ! shift/reduce conflict for COMA resolved as shift
    PUNTOCOMA       reduce using rule 11 (identList -> identList COMA identList .)
    COMA            shift and go to state 27

  ! COMA            [ reduce using rule 11 (identList -> identList COMA identList .) ]


state 49

    (10) identList -> ID ACTUALI NUMERO .

    PUNTOCOMA       reduce using rule 10 (identList -> ID ACTUALI NUMERO .)
    COMA            reduce using rule 10 (identList -> ID ACTUALI NUMERO .)


state 50

    (12) procDec1 -> procDec1 MOP ID PUNTOCOMA . block PUNTOCOMA
    (2) block -> . constDec1 varDec1 procDec1 statement
    (3) constDec1 -> . DR constAssignmentList PUNTOCOMA
    (4) constDec1 -> . empty
    (42) empty -> .

    DR              shift and go to state 4
    METRO           reduce using rule 42 (empty -> .)
    MOP             reduce using rule 42 (empty -> .)
    ID              reduce using rule 42 (empty -> .)
    KNT             reduce using rule 42 (empty -> .)
    HF              reduce using rule 42 (empty -> .)
    YF              reduce using rule 42 (empty -> .)
    MIENTRAS        reduce using rule 42 (empty -> .)
    PUNTOCOMA       reduce using rule 42 (empty -> .)

    block                          shift and go to state 70
    constDec1                      shift and go to state 3
    empty                          shift and go to state 5

state 51

    (16) statement -> ID ACTUALI expression .
    (32) expression -> expression . addingOperator term
    (33) addingOperator -> . SUMA
    (34) addingOperator -> . MENOS

    $end            reduce using rule 16 (statement -> ID ACTUALI expression .)
    PUNTOCOMA       reduce using rule 16 (statement -> ID ACTUALI expression .)
    GG              reduce using rule 16 (statement -> ID ACTUALI expression .)
    LLAVED          reduce using rule 16 (statement -> ID ACTUALI expression .)
    SUMA            shift and go to state 42
    MENOS           shift and go to state 43

    addingOperator                 shift and go to state 57

state 52

    (18) statement -> HF statementList GG .

    $end            reduce using rule 18 (statement -> HF statementList GG .)
    PUNTOCOMA       reduce using rule 18 (statement -> HF statementList GG .)
    GG              reduce using rule 18 (statement -> HF statementList GG .)
    LLAVED          reduce using rule 18 (statement -> HF statementList GG .)


state 53

    (15) statementList -> statementList PUNTOCOMA . statement
    (16) statement -> . ID ACTUALI expression
    (17) statement -> . KNT ID
    (18) statement -> . HF statementList GG
    (19) statement -> . YF condition LLAVEI statement LLAVED
    (20) statement -> . MIENTRAS condition LLAVEI statement LLAVED
    (21) statement -> . empty
    (42) empty -> .

    ID              shift and go to state 20
    KNT             shift and go to state 21
    HF              shift and go to state 22
    YF              shift and go to state 23
    MIENTRAS        shift and go to state 24
    GG              reduce using rule 42 (empty -> .)
    PUNTOCOMA       reduce using rule 42 (empty -> .)

    statement                      shift and go to state 71
    empty                          shift and go to state 25

state 54

    (19) statement -> YF condition LLAVEI . statement LLAVED
    (16) statement -> . ID ACTUALI expression
    (17) statement -> . KNT ID
    (18) statement -> . HF statementList GG
    (19) statement -> . YF condition LLAVEI statement LLAVED
    (20) statement -> . MIENTRAS condition LLAVEI statement LLAVED
    (21) statement -> . empty
    (42) empty -> .

    ID              shift and go to state 20
    KNT             shift and go to state 21
    HF              shift and go to state 22
    YF              shift and go to state 23
    MIENTRAS        shift and go to state 24
    LLAVED          reduce using rule 42 (empty -> .)

    statement                      shift and go to state 72
    empty                          shift and go to state 25

state 55

    (22) condition -> IMPAR expression .
    (32) expression -> expression . addingOperator term
    (33) addingOperator -> . SUMA
    (34) addingOperator -> . MENOS

    LLAVEI          reduce using rule 22 (condition -> IMPAR expression .)
    SUMA            shift and go to state 42
    MENOS           shift and go to state 43

    addingOperator                 shift and go to state 57

state 56

    (23) condition -> expression relation . expression
    (30) expression -> . term
    (31) expression -> . addingOperator term
    (32) expression -> . expression addingOperator term
    (35) term -> . factor
    (36) term -> . term multiplyingOperator factor
    (33) addingOperator -> . SUMA
    (34) addingOperator -> . MENOS
    (39) factor -> . ID
    (40) factor -> . NUMERO
    (41) factor -> . PARENTI expression PARENTD

    SUMA            shift and go to state 42
    MENOS           shift and go to state 43
    ID              shift and go to state 44
    NUMERO          shift and go to state 45
    PARENTI         shift and go to state 46

    expression                     shift and go to state 73
    term                           shift and go to state 39
    addingOperator                 shift and go to state 40
    factor                         shift and go to state 41

state 57

    (32) expression -> expression addingOperator . term
    (35) term -> . factor
    (36) term -> . term multiplyingOperator factor
    (39) factor -> . ID
    (40) factor -> . NUMERO
    (41) factor -> . PARENTI expression PARENTD

    ID              shift and go to state 44
    NUMERO          shift and go to state 45
    PARENTI         shift and go to state 46

    term                           shift and go to state 74
    factor                         shift and go to state 41

state 58

    (24) relation -> IGUAL .

    SUMA            reduce using rule 24 (relation -> IGUAL .)
    MENOS           reduce using rule 24 (relation -> IGUAL .)
    ID              reduce using rule 24 (relation -> IGUAL .)
    NUMERO          reduce using rule 24 (relation -> IGUAL .)
    PARENTI         reduce using rule 24 (relation -> IGUAL .)


state 59

    (25) relation -> DISTINTO .

    SUMA            reduce using rule 25 (relation -> DISTINTO .)
    MENOS           reduce using rule 25 (relation -> DISTINTO .)
    ID              reduce using rule 25 (relation -> DISTINTO .)
    NUMERO          reduce using rule 25 (relation -> DISTINTO .)
    PARENTI         reduce using rule 25 (relation -> DISTINTO .)


state 60

    (26) relation -> MENOR .

    SUMA            reduce using rule 26 (relation -> MENOR .)
    MENOS           reduce using rule 26 (relation -> MENOR .)
    ID              reduce using rule 26 (relation -> MENOR .)
    NUMERO          reduce using rule 26 (relation -> MENOR .)
    PARENTI         reduce using rule 26 (relation -> MENOR .)


state 61

    (27) relation -> MAYOR .

    SUMA            reduce using rule 27 (relation -> MAYOR .)
    MENOS           reduce using rule 27 (relation -> MAYOR .)
    ID              reduce using rule 27 (relation -> MAYOR .)
    NUMERO          reduce using rule 27 (relation -> MAYOR .)
    PARENTI         reduce using rule 27 (relation -> MAYOR .)


state 62

    (28) relation -> MENORI .

    SUMA            reduce using rule 28 (relation -> MENORI .)
    MENOS           reduce using rule 28 (relation -> MENORI .)
    ID              reduce using rule 28 (relation -> MENORI .)
    NUMERO          reduce using rule 28 (relation -> MENORI .)
    PARENTI         reduce using rule 28 (relation -> MENORI .)


state 63

    (29) relation -> MAYORI .

    SUMA            reduce using rule 29 (relation -> MAYORI .)
    MENOS           reduce using rule 29 (relation -> MAYORI .)
    ID              reduce using rule 29 (relation -> MAYORI .)
    NUMERO          reduce using rule 29 (relation -> MAYORI .)
    PARENTI         reduce using rule 29 (relation -> MAYORI .)


state 64

    (36) term -> term multiplyingOperator . factor
    (39) factor -> . ID
    (40) factor -> . NUMERO
    (41) factor -> . PARENTI expression PARENTD

    ID              shift and go to state 44
    NUMERO          shift and go to state 45
    PARENTI         shift and go to state 46

    factor                         shift and go to state 75

state 65

    (37) multiplyingOperator -> MULTI .

    ID              reduce using rule 37 (multiplyingOperator -> MULTI .)
    NUMERO          reduce using rule 37 (multiplyingOperator -> MULTI .)
    PARENTI         reduce using rule 37 (multiplyingOperator -> MULTI .)


state 66

    (38) multiplyingOperator -> DIVIDIR .

    ID              reduce using rule 38 (multiplyingOperator -> DIVIDIR .)
    NUMERO          reduce using rule 38 (multiplyingOperator -> DIVIDIR .)
    PARENTI         reduce using rule 38 (multiplyingOperator -> DIVIDIR .)


state 67

    (31) expression -> addingOperator term .
    (36) term -> term . multiplyingOperator factor
    (37) multiplyingOperator -> . MULTI
    (38) multiplyingOperator -> . DIVIDIR

    IGUAL           reduce using rule 31 (expression -> addingOperator term .)
    DISTINTO        reduce using rule 31 (expression -> addingOperator term .)
    MENOR           reduce using rule 31 (expression -> addingOperator term .)
    MAYOR           reduce using rule 31 (expression -> addingOperator term .)
    MENORI          reduce using rule 31 (expression -> addingOperator term .)
    MAYORI          reduce using rule 31 (expression -> addingOperator term .)
    SUMA            reduce using rule 31 (expression -> addingOperator term .)
    MENOS           reduce using rule 31 (expression -> addingOperator term .)
    $end            reduce using rule 31 (expression -> addingOperator term .)
    PUNTOCOMA       reduce using rule 31 (expression -> addingOperator term .)
    GG              reduce using rule 31 (expression -> addingOperator term .)
    LLAVED          reduce using rule 31 (expression -> addingOperator term .)
    LLAVEI          reduce using rule 31 (expression -> addingOperator term .)
    PARENTD         reduce using rule 31 (expression -> addingOperator term .)
    MULTI           shift and go to state 65
    DIVIDIR         shift and go to state 66

    multiplyingOperator            shift and go to state 64

state 68

    (41) factor -> PARENTI expression . PARENTD
    (32) expression -> expression . addingOperator term
    (33) addingOperator -> . SUMA
    (34) addingOperator -> . MENOS

    PARENTD         shift and go to state 76
    SUMA            shift and go to state 42
    MENOS           shift and go to state 43

    addingOperator                 shift and go to state 57

state 69

    (20) statement -> MIENTRAS condition LLAVEI . statement LLAVED
    (16) statement -> . ID ACTUALI expression
    (17) statement -> . KNT ID
    (18) statement -> . HF statementList GG
    (19) statement -> . YF condition LLAVEI statement LLAVED
    (20) statement -> . MIENTRAS condition LLAVEI statement LLAVED
    (21) statement -> . empty
    (42) empty -> .

    ID              shift and go to state 20
    KNT             shift and go to state 21
    HF              shift and go to state 22
    YF              shift and go to state 23
    MIENTRAS        shift and go to state 24
    LLAVED          reduce using rule 42 (empty -> .)

    statement                      shift and go to state 77
    empty                          shift and go to state 25

state 70

    (12) procDec1 -> procDec1 MOP ID PUNTOCOMA block . PUNTOCOMA

    PUNTOCOMA       shift and go to state 78


state 71

    (15) statementList -> statementList PUNTOCOMA statement .

    GG              reduce using rule 15 (statementList -> statementList PUNTOCOMA statement .)
    PUNTOCOMA       reduce using rule 15 (statementList -> statementList PUNTOCOMA statement .)


state 72

    (19) statement -> YF condition LLAVEI statement . LLAVED

    LLAVED          shift and go to state 79


state 73

    (23) condition -> expression relation expression .
    (32) expression -> expression . addingOperator term
    (33) addingOperator -> . SUMA
    (34) addingOperator -> . MENOS

    LLAVEI          reduce using rule 23 (condition -> expression relation expression .)
    SUMA            shift and go to state 42
    MENOS           shift and go to state 43

    addingOperator                 shift and go to state 57

state 74

    (32) expression -> expression addingOperator term .
    (36) term -> term . multiplyingOperator factor
    (37) multiplyingOperator -> . MULTI
    (38) multiplyingOperator -> . DIVIDIR

    IGUAL           reduce using rule 32 (expression -> expression addingOperator term .)
    DISTINTO        reduce using rule 32 (expression -> expression addingOperator term .)
    MENOR           reduce using rule 32 (expression -> expression addingOperator term .)
    MAYOR           reduce using rule 32 (expression -> expression addingOperator term .)
    MENORI          reduce using rule 32 (expression -> expression addingOperator term .)
    MAYORI          reduce using rule 32 (expression -> expression addingOperator term .)
    SUMA            reduce using rule 32 (expression -> expression addingOperator term .)
    MENOS           reduce using rule 32 (expression -> expression addingOperator term .)
    $end            reduce using rule 32 (expression -> expression addingOperator term .)
    PUNTOCOMA       reduce using rule 32 (expression -> expression addingOperator term .)
    GG              reduce using rule 32 (expression -> expression addingOperator term .)
    LLAVED          reduce using rule 32 (expression -> expression addingOperator term .)
    LLAVEI          reduce using rule 32 (expression -> expression addingOperator term .)
    PARENTD         reduce using rule 32 (expression -> expression addingOperator term .)
    MULTI           shift and go to state 65
    DIVIDIR         shift and go to state 66

    multiplyingOperator            shift and go to state 64

state 75

    (36) term -> term multiplyingOperator factor .

    MULTI           reduce using rule 36 (term -> term multiplyingOperator factor .)
    DIVIDIR         reduce using rule 36 (term -> term multiplyingOperator factor .)
    IGUAL           reduce using rule 36 (term -> term multiplyingOperator factor .)
    DISTINTO        reduce using rule 36 (term -> term multiplyingOperator factor .)
    MENOR           reduce using rule 36 (term -> term multiplyingOperator factor .)
    MAYOR           reduce using rule 36 (term -> term multiplyingOperator factor .)
    MENORI          reduce using rule 36 (term -> term multiplyingOperator factor .)
    MAYORI          reduce using rule 36 (term -> term multiplyingOperator factor .)
    SUMA            reduce using rule 36 (term -> term multiplyingOperator factor .)
    MENOS           reduce using rule 36 (term -> term multiplyingOperator factor .)
    $end            reduce using rule 36 (term -> term multiplyingOperator factor .)
    PUNTOCOMA       reduce using rule 36 (term -> term multiplyingOperator factor .)
    GG              reduce using rule 36 (term -> term multiplyingOperator factor .)
    LLAVED          reduce using rule 36 (term -> term multiplyingOperator factor .)
    LLAVEI          reduce using rule 36 (term -> term multiplyingOperator factor .)
    PARENTD         reduce using rule 36 (term -> term multiplyingOperator factor .)


state 76

    (41) factor -> PARENTI expression PARENTD .

    MULTI           reduce using rule 41 (factor -> PARENTI expression PARENTD .)
    DIVIDIR         reduce using rule 41 (factor -> PARENTI expression PARENTD .)
    IGUAL           reduce using rule 41 (factor -> PARENTI expression PARENTD .)
    DISTINTO        reduce using rule 41 (factor -> PARENTI expression PARENTD .)
    MENOR           reduce using rule 41 (factor -> PARENTI expression PARENTD .)
    MAYOR           reduce using rule 41 (factor -> PARENTI expression PARENTD .)
    MENORI          reduce using rule 41 (factor -> PARENTI expression PARENTD .)
    MAYORI          reduce using rule 41 (factor -> PARENTI expression PARENTD .)
    SUMA            reduce using rule 41 (factor -> PARENTI expression PARENTD .)
    MENOS           reduce using rule 41 (factor -> PARENTI expression PARENTD .)
    $end            reduce using rule 41 (factor -> PARENTI expression PARENTD .)
    PUNTOCOMA       reduce using rule 41 (factor -> PARENTI expression PARENTD .)
    GG              reduce using rule 41 (factor -> PARENTI expression PARENTD .)
    LLAVED          reduce using rule 41 (factor -> PARENTI expression PARENTD .)
    LLAVEI          reduce using rule 41 (factor -> PARENTI expression PARENTD .)
    PARENTD         reduce using rule 41 (factor -> PARENTI expression PARENTD .)


state 77

    (20) statement -> MIENTRAS condition LLAVEI statement . LLAVED

    LLAVED          shift and go to state 80


state 78

    (12) procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .

    MOP             reduce using rule 12 (procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .)
    ID              reduce using rule 12 (procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .)
    KNT             reduce using rule 12 (procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .)
    HF              reduce using rule 12 (procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .)
    YF              reduce using rule 12 (procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .)
    MIENTRAS        reduce using rule 12 (procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .)
    $end            reduce using rule 12 (procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 12 (procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .)


state 79

    (19) statement -> YF condition LLAVEI statement LLAVED .

    $end            reduce using rule 19 (statement -> YF condition LLAVEI statement LLAVED .)
    PUNTOCOMA       reduce using rule 19 (statement -> YF condition LLAVEI statement LLAVED .)
    GG              reduce using rule 19 (statement -> YF condition LLAVEI statement LLAVED .)
    LLAVED          reduce using rule 19 (statement -> YF condition LLAVEI statement LLAVED .)


state 80

    (20) statement -> MIENTRAS condition LLAVEI statement LLAVED .

    $end            reduce using rule 20 (statement -> MIENTRAS condition LLAVEI statement LLAVED .)
    PUNTOCOMA       reduce using rule 20 (statement -> MIENTRAS condition LLAVEI statement LLAVED .)
    GG              reduce using rule 20 (statement -> MIENTRAS condition LLAVEI statement LLAVED .)
    LLAVED          reduce using rule 20 (statement -> MIENTRAS condition LLAVEI statement LLAVED .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMA in state 29 resolved as shift
WARNING: shift/reduce conflict for COMA in state 48 resolved as shift
