Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMILLA
    DALE
    DOSPUNTOS
    ESPACIO
    MUEVE
    NUMERAL
    PARKIN
    PUNTO
    WOLAN

Grammar

Rule 0     S' -> program
Rule 1     program -> block
Rule 2     block -> constDec1 varDec1 procDec1 statement
Rule 3     constDec1 -> DR constAssignmentList PUNTOCOMA
Rule 4     constDec1 -> empty
Rule 5     constAssignmentList -> ID ACTUALI NUMERO
Rule 6     constAssignmentList -> constAssignmentList COMA ID ACTUALI NUMERO
Rule 7     varDec1 -> METRO identList PUNTOCOMA
Rule 8     varDec1 -> empty
Rule 9     identList -> ID
Rule 10    identList -> identList COMA ID
Rule 11    procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA
Rule 12    procDec1 -> empty
Rule 13    statement -> ID ACTUALI expression
Rule 14    statement -> KNT ID
Rule 15    statement -> HF statementList GG
Rule 16    statement -> YF condition LLAVEI statement LLAVED
Rule 17    statement -> MIENTRAS condition LLAVEI statement LLAVED
Rule 18    statement -> empty
Rule 19    statementList -> statement
Rule 20    statementList -> statementList PUNTOCOMA statement
Rule 21    condition -> IMPAR expression
Rule 22    condition -> expression relation expression
Rule 23    relation -> IGUAL
Rule 24    relation -> DISTINTO
Rule 25    relation -> MENOR
Rule 26    relation -> MAYOR
Rule 27    relation -> MENORI
Rule 28    relation -> MAYORI
Rule 29    expression -> term
Rule 30    expression -> addingOperator term
Rule 31    expression -> expression addingOperator term
Rule 32    addingOperator -> SUMA
Rule 33    addingOperator -> MENOS
Rule 34    term -> factor
Rule 35    term -> term multiplyingOperator factor
Rule 36    multiplyingOperator -> MULTI
Rule 37    multiplyingOperator -> DIVIDIR
Rule 38    factor -> ID
Rule 39    factor -> NUMERO
Rule 40    factor -> PARENTI expression PARENTD
Rule 41    empty -> <empty>

Terminals, with rules where they appear

ACTUALI              : 5 6 13
COMA                 : 6 10
COMILLA              : 
DALE                 : 
DISTINTO             : 24
DIVIDIR              : 37
DOSPUNTOS            : 
DR                   : 3
ESPACIO              : 
GG                   : 15
HF                   : 15
ID                   : 5 6 9 10 11 13 14 38
IGUAL                : 23
IMPAR                : 21
KNT                  : 14
LLAVED               : 16 17
LLAVEI               : 16 17
MAYOR                : 26
MAYORI               : 28
MENOR                : 25
MENORI               : 27
MENOS                : 33
METRO                : 7
MIENTRAS             : 17
MOP                  : 11
MUEVE                : 
MULTI                : 36
NUMERAL              : 
NUMERO               : 5 6 39
PARENTD              : 40
PARENTI              : 40
PARKIN               : 
PUNTO                : 
PUNTOCOMA            : 3 7 11 11 20
SUMA                 : 32
WOLAN                : 
YF                   : 16
error                : 

Nonterminals, with rules where they appear

addingOperator       : 30 31
block                : 1 11
condition            : 16 17
constAssignmentList  : 3 6
constDec1            : 2
empty                : 4 8 12 18
expression           : 13 21 22 22 31 40
factor               : 34 35
identList            : 7 10
multiplyingOperator  : 35
procDec1             : 2 11
program              : 0
relation             : 22
statement            : 2 16 17 19 20
statementList        : 15 20
term                 : 29 30 31 35
varDec1              : 2

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block
    (2) block -> . constDec1 varDec1 procDec1 statement
    (3) constDec1 -> . DR constAssignmentList PUNTOCOMA
    (4) constDec1 -> . empty
    (41) empty -> .

    DR              shift and go to state 4
    METRO           reduce using rule 41 (empty -> .)
    MOP             reduce using rule 41 (empty -> .)
    ID              reduce using rule 41 (empty -> .)
    KNT             reduce using rule 41 (empty -> .)
    HF              reduce using rule 41 (empty -> .)
    YF              reduce using rule 41 (empty -> .)
    MIENTRAS        reduce using rule 41 (empty -> .)
    $end            reduce using rule 41 (empty -> .)

    program                        shift and go to state 1
    block                          shift and go to state 2
    constDec1                      shift and go to state 3
    empty                          shift and go to state 5

state 1

    (0) S' -> program .



state 2

    (1) program -> block .

    $end            reduce using rule 1 (program -> block .)


state 3

    (2) block -> constDec1 . varDec1 procDec1 statement
    (7) varDec1 -> . METRO identList PUNTOCOMA
    (8) varDec1 -> . empty
    (41) empty -> .

    METRO           shift and go to state 7
    MOP             reduce using rule 41 (empty -> .)
    ID              reduce using rule 41 (empty -> .)
    KNT             reduce using rule 41 (empty -> .)
    HF              reduce using rule 41 (empty -> .)
    YF              reduce using rule 41 (empty -> .)
    MIENTRAS        reduce using rule 41 (empty -> .)
    $end            reduce using rule 41 (empty -> .)
    PUNTOCOMA       reduce using rule 41 (empty -> .)

    varDec1                        shift and go to state 6
    empty                          shift and go to state 8

state 4

    (3) constDec1 -> DR . constAssignmentList PUNTOCOMA
    (5) constAssignmentList -> . ID ACTUALI NUMERO
    (6) constAssignmentList -> . constAssignmentList COMA ID ACTUALI NUMERO

    ID              shift and go to state 10

    constAssignmentList            shift and go to state 9

state 5

    (4) constDec1 -> empty .

    METRO           reduce using rule 4 (constDec1 -> empty .)
    MOP             reduce using rule 4 (constDec1 -> empty .)
    ID              reduce using rule 4 (constDec1 -> empty .)
    KNT             reduce using rule 4 (constDec1 -> empty .)
    HF              reduce using rule 4 (constDec1 -> empty .)
    YF              reduce using rule 4 (constDec1 -> empty .)
    MIENTRAS        reduce using rule 4 (constDec1 -> empty .)
    $end            reduce using rule 4 (constDec1 -> empty .)
    PUNTOCOMA       reduce using rule 4 (constDec1 -> empty .)


state 6

    (2) block -> constDec1 varDec1 . procDec1 statement
    (11) procDec1 -> . procDec1 MOP ID PUNTOCOMA block PUNTOCOMA
    (12) procDec1 -> . empty
    (41) empty -> .

    MOP             reduce using rule 41 (empty -> .)
    ID              reduce using rule 41 (empty -> .)
    KNT             reduce using rule 41 (empty -> .)
    HF              reduce using rule 41 (empty -> .)
    YF              reduce using rule 41 (empty -> .)
    MIENTRAS        reduce using rule 41 (empty -> .)
    $end            reduce using rule 41 (empty -> .)
    PUNTOCOMA       reduce using rule 41 (empty -> .)

    procDec1                       shift and go to state 11
    empty                          shift and go to state 12

state 7

    (7) varDec1 -> METRO . identList PUNTOCOMA
    (9) identList -> . ID
    (10) identList -> . identList COMA ID

    ID              shift and go to state 14

    identList                      shift and go to state 13

state 8

    (8) varDec1 -> empty .

    MOP             reduce using rule 8 (varDec1 -> empty .)
    ID              reduce using rule 8 (varDec1 -> empty .)
    KNT             reduce using rule 8 (varDec1 -> empty .)
    HF              reduce using rule 8 (varDec1 -> empty .)
    YF              reduce using rule 8 (varDec1 -> empty .)
    MIENTRAS        reduce using rule 8 (varDec1 -> empty .)
    $end            reduce using rule 8 (varDec1 -> empty .)
    PUNTOCOMA       reduce using rule 8 (varDec1 -> empty .)


state 9

    (3) constDec1 -> DR constAssignmentList . PUNTOCOMA
    (6) constAssignmentList -> constAssignmentList . COMA ID ACTUALI NUMERO

    PUNTOCOMA       shift and go to state 15
    COMA            shift and go to state 16


state 10

    (5) constAssignmentList -> ID . ACTUALI NUMERO

    ACTUALI         shift and go to state 17


state 11

    (2) block -> constDec1 varDec1 procDec1 . statement
    (11) procDec1 -> procDec1 . MOP ID PUNTOCOMA block PUNTOCOMA
    (13) statement -> . ID ACTUALI expression
    (14) statement -> . KNT ID
    (15) statement -> . HF statementList GG
    (16) statement -> . YF condition LLAVEI statement LLAVED
    (17) statement -> . MIENTRAS condition LLAVEI statement LLAVED
    (18) statement -> . empty
    (41) empty -> .

    MOP             shift and go to state 19
    ID              shift and go to state 20
    KNT             shift and go to state 21
    HF              shift and go to state 22
    YF              shift and go to state 23
    MIENTRAS        shift and go to state 24
    $end            reduce using rule 41 (empty -> .)
    PUNTOCOMA       reduce using rule 41 (empty -> .)

    statement                      shift and go to state 18
    empty                          shift and go to state 25

state 12

    (12) procDec1 -> empty .

    MOP             reduce using rule 12 (procDec1 -> empty .)
    ID              reduce using rule 12 (procDec1 -> empty .)
    KNT             reduce using rule 12 (procDec1 -> empty .)
    HF              reduce using rule 12 (procDec1 -> empty .)
    YF              reduce using rule 12 (procDec1 -> empty .)
    MIENTRAS        reduce using rule 12 (procDec1 -> empty .)
    $end            reduce using rule 12 (procDec1 -> empty .)
    PUNTOCOMA       reduce using rule 12 (procDec1 -> empty .)


state 13

    (7) varDec1 -> METRO identList . PUNTOCOMA
    (10) identList -> identList . COMA ID

    PUNTOCOMA       shift and go to state 26
    COMA            shift and go to state 27


state 14

    (9) identList -> ID .

    PUNTOCOMA       reduce using rule 9 (identList -> ID .)
    COMA            reduce using rule 9 (identList -> ID .)


state 15

    (3) constDec1 -> DR constAssignmentList PUNTOCOMA .

    METRO           reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)
    MOP             reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)
    ID              reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)
    KNT             reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)
    HF              reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)
    YF              reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)
    MIENTRAS        reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)
    $end            reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 3 (constDec1 -> DR constAssignmentList PUNTOCOMA .)


state 16

    (6) constAssignmentList -> constAssignmentList COMA . ID ACTUALI NUMERO

    ID              shift and go to state 28


state 17

    (5) constAssignmentList -> ID ACTUALI . NUMERO

    NUMERO          shift and go to state 29


state 18

    (2) block -> constDec1 varDec1 procDec1 statement .

    $end            reduce using rule 2 (block -> constDec1 varDec1 procDec1 statement .)
    PUNTOCOMA       reduce using rule 2 (block -> constDec1 varDec1 procDec1 statement .)


state 19

    (11) procDec1 -> procDec1 MOP . ID PUNTOCOMA block PUNTOCOMA

    ID              shift and go to state 30


state 20

    (13) statement -> ID . ACTUALI expression

    ACTUALI         shift and go to state 31


state 21

    (14) statement -> KNT . ID

    ID              shift and go to state 32


state 22

    (15) statement -> HF . statementList GG
    (19) statementList -> . statement
    (20) statementList -> . statementList PUNTOCOMA statement
    (13) statement -> . ID ACTUALI expression
    (14) statement -> . KNT ID
    (15) statement -> . HF statementList GG
    (16) statement -> . YF condition LLAVEI statement LLAVED
    (17) statement -> . MIENTRAS condition LLAVEI statement LLAVED
    (18) statement -> . empty
    (41) empty -> .

    ID              shift and go to state 20
    KNT             shift and go to state 21
    HF              shift and go to state 22
    YF              shift and go to state 23
    MIENTRAS        shift and go to state 24
    GG              reduce using rule 41 (empty -> .)
    PUNTOCOMA       reduce using rule 41 (empty -> .)

    statementList                  shift and go to state 33
    statement                      shift and go to state 34
    empty                          shift and go to state 25

state 23

    (16) statement -> YF . condition LLAVEI statement LLAVED
    (21) condition -> . IMPAR expression
    (22) condition -> . expression relation expression
    (29) expression -> . term
    (30) expression -> . addingOperator term
    (31) expression -> . expression addingOperator term
    (34) term -> . factor
    (35) term -> . term multiplyingOperator factor
    (32) addingOperator -> . SUMA
    (33) addingOperator -> . MENOS
    (38) factor -> . ID
    (39) factor -> . NUMERO
    (40) factor -> . PARENTI expression PARENTD

    IMPAR           shift and go to state 36
    SUMA            shift and go to state 41
    MENOS           shift and go to state 42
    ID              shift and go to state 43
    NUMERO          shift and go to state 44
    PARENTI         shift and go to state 45

    condition                      shift and go to state 35
    expression                     shift and go to state 37
    term                           shift and go to state 38
    addingOperator                 shift and go to state 39
    factor                         shift and go to state 40

state 24

    (17) statement -> MIENTRAS . condition LLAVEI statement LLAVED
    (21) condition -> . IMPAR expression
    (22) condition -> . expression relation expression
    (29) expression -> . term
    (30) expression -> . addingOperator term
    (31) expression -> . expression addingOperator term
    (34) term -> . factor
    (35) term -> . term multiplyingOperator factor
    (32) addingOperator -> . SUMA
    (33) addingOperator -> . MENOS
    (38) factor -> . ID
    (39) factor -> . NUMERO
    (40) factor -> . PARENTI expression PARENTD

    IMPAR           shift and go to state 36
    SUMA            shift and go to state 41
    MENOS           shift and go to state 42
    ID              shift and go to state 43
    NUMERO          shift and go to state 44
    PARENTI         shift and go to state 45

    condition                      shift and go to state 46
    expression                     shift and go to state 37
    term                           shift and go to state 38
    addingOperator                 shift and go to state 39
    factor                         shift and go to state 40

state 25

    (18) statement -> empty .

    $end            reduce using rule 18 (statement -> empty .)
    PUNTOCOMA       reduce using rule 18 (statement -> empty .)
    GG              reduce using rule 18 (statement -> empty .)
    LLAVED          reduce using rule 18 (statement -> empty .)


state 26

    (7) varDec1 -> METRO identList PUNTOCOMA .

    MOP             reduce using rule 7 (varDec1 -> METRO identList PUNTOCOMA .)
    ID              reduce using rule 7 (varDec1 -> METRO identList PUNTOCOMA .)
    KNT             reduce using rule 7 (varDec1 -> METRO identList PUNTOCOMA .)
    HF              reduce using rule 7 (varDec1 -> METRO identList PUNTOCOMA .)
    YF              reduce using rule 7 (varDec1 -> METRO identList PUNTOCOMA .)
    MIENTRAS        reduce using rule 7 (varDec1 -> METRO identList PUNTOCOMA .)
    $end            reduce using rule 7 (varDec1 -> METRO identList PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 7 (varDec1 -> METRO identList PUNTOCOMA .)


state 27

    (10) identList -> identList COMA . ID

    ID              shift and go to state 47


state 28

    (6) constAssignmentList -> constAssignmentList COMA ID . ACTUALI NUMERO

    ACTUALI         shift and go to state 48


state 29

    (5) constAssignmentList -> ID ACTUALI NUMERO .

    PUNTOCOMA       reduce using rule 5 (constAssignmentList -> ID ACTUALI NUMERO .)
    COMA            reduce using rule 5 (constAssignmentList -> ID ACTUALI NUMERO .)


state 30

    (11) procDec1 -> procDec1 MOP ID . PUNTOCOMA block PUNTOCOMA

    PUNTOCOMA       shift and go to state 49


state 31

    (13) statement -> ID ACTUALI . expression
    (29) expression -> . term
    (30) expression -> . addingOperator term
    (31) expression -> . expression addingOperator term
    (34) term -> . factor
    (35) term -> . term multiplyingOperator factor
    (32) addingOperator -> . SUMA
    (33) addingOperator -> . MENOS
    (38) factor -> . ID
    (39) factor -> . NUMERO
    (40) factor -> . PARENTI expression PARENTD

    SUMA            shift and go to state 41
    MENOS           shift and go to state 42
    ID              shift and go to state 43
    NUMERO          shift and go to state 44
    PARENTI         shift and go to state 45

    expression                     shift and go to state 50
    term                           shift and go to state 38
    addingOperator                 shift and go to state 39
    factor                         shift and go to state 40

state 32

    (14) statement -> KNT ID .

    $end            reduce using rule 14 (statement -> KNT ID .)
    PUNTOCOMA       reduce using rule 14 (statement -> KNT ID .)
    GG              reduce using rule 14 (statement -> KNT ID .)
    LLAVED          reduce using rule 14 (statement -> KNT ID .)


state 33

    (15) statement -> HF statementList . GG
    (20) statementList -> statementList . PUNTOCOMA statement

    GG              shift and go to state 51
    PUNTOCOMA       shift and go to state 52


state 34

    (19) statementList -> statement .

    GG              reduce using rule 19 (statementList -> statement .)
    PUNTOCOMA       reduce using rule 19 (statementList -> statement .)


state 35

    (16) statement -> YF condition . LLAVEI statement LLAVED

    LLAVEI          shift and go to state 53


state 36

    (21) condition -> IMPAR . expression
    (29) expression -> . term
    (30) expression -> . addingOperator term
    (31) expression -> . expression addingOperator term
    (34) term -> . factor
    (35) term -> . term multiplyingOperator factor
    (32) addingOperator -> . SUMA
    (33) addingOperator -> . MENOS
    (38) factor -> . ID
    (39) factor -> . NUMERO
    (40) factor -> . PARENTI expression PARENTD

    SUMA            shift and go to state 41
    MENOS           shift and go to state 42
    ID              shift and go to state 43
    NUMERO          shift and go to state 44
    PARENTI         shift and go to state 45

    expression                     shift and go to state 54
    term                           shift and go to state 38
    addingOperator                 shift and go to state 39
    factor                         shift and go to state 40

state 37

    (22) condition -> expression . relation expression
    (31) expression -> expression . addingOperator term
    (23) relation -> . IGUAL
    (24) relation -> . DISTINTO
    (25) relation -> . MENOR
    (26) relation -> . MAYOR
    (27) relation -> . MENORI
    (28) relation -> . MAYORI
    (32) addingOperator -> . SUMA
    (33) addingOperator -> . MENOS

    IGUAL           shift and go to state 57
    DISTINTO        shift and go to state 58
    MENOR           shift and go to state 59
    MAYOR           shift and go to state 60
    MENORI          shift and go to state 61
    MAYORI          shift and go to state 62
    SUMA            shift and go to state 41
    MENOS           shift and go to state 42

    relation                       shift and go to state 55
    addingOperator                 shift and go to state 56

state 38

    (29) expression -> term .
    (35) term -> term . multiplyingOperator factor
    (36) multiplyingOperator -> . MULTI
    (37) multiplyingOperator -> . DIVIDIR

    IGUAL           reduce using rule 29 (expression -> term .)
    DISTINTO        reduce using rule 29 (expression -> term .)
    MENOR           reduce using rule 29 (expression -> term .)
    MAYOR           reduce using rule 29 (expression -> term .)
    MENORI          reduce using rule 29 (expression -> term .)
    MAYORI          reduce using rule 29 (expression -> term .)
    SUMA            reduce using rule 29 (expression -> term .)
    MENOS           reduce using rule 29 (expression -> term .)
    $end            reduce using rule 29 (expression -> term .)
    PUNTOCOMA       reduce using rule 29 (expression -> term .)
    GG              reduce using rule 29 (expression -> term .)
    LLAVED          reduce using rule 29 (expression -> term .)
    LLAVEI          reduce using rule 29 (expression -> term .)
    PARENTD         reduce using rule 29 (expression -> term .)
    MULTI           shift and go to state 64
    DIVIDIR         shift and go to state 65

    multiplyingOperator            shift and go to state 63

state 39

    (30) expression -> addingOperator . term
    (34) term -> . factor
    (35) term -> . term multiplyingOperator factor
    (38) factor -> . ID
    (39) factor -> . NUMERO
    (40) factor -> . PARENTI expression PARENTD

    ID              shift and go to state 43
    NUMERO          shift and go to state 44
    PARENTI         shift and go to state 45

    term                           shift and go to state 66
    factor                         shift and go to state 40

state 40

    (34) term -> factor .

    MULTI           reduce using rule 34 (term -> factor .)
    DIVIDIR         reduce using rule 34 (term -> factor .)
    IGUAL           reduce using rule 34 (term -> factor .)
    DISTINTO        reduce using rule 34 (term -> factor .)
    MENOR           reduce using rule 34 (term -> factor .)
    MAYOR           reduce using rule 34 (term -> factor .)
    MENORI          reduce using rule 34 (term -> factor .)
    MAYORI          reduce using rule 34 (term -> factor .)
    SUMA            reduce using rule 34 (term -> factor .)
    MENOS           reduce using rule 34 (term -> factor .)
    $end            reduce using rule 34 (term -> factor .)
    PUNTOCOMA       reduce using rule 34 (term -> factor .)
    GG              reduce using rule 34 (term -> factor .)
    LLAVED          reduce using rule 34 (term -> factor .)
    LLAVEI          reduce using rule 34 (term -> factor .)
    PARENTD         reduce using rule 34 (term -> factor .)


state 41

    (32) addingOperator -> SUMA .

    ID              reduce using rule 32 (addingOperator -> SUMA .)
    NUMERO          reduce using rule 32 (addingOperator -> SUMA .)
    PARENTI         reduce using rule 32 (addingOperator -> SUMA .)


state 42

    (33) addingOperator -> MENOS .

    ID              reduce using rule 33 (addingOperator -> MENOS .)
    NUMERO          reduce using rule 33 (addingOperator -> MENOS .)
    PARENTI         reduce using rule 33 (addingOperator -> MENOS .)


state 43

    (38) factor -> ID .

    MULTI           reduce using rule 38 (factor -> ID .)
    DIVIDIR         reduce using rule 38 (factor -> ID .)
    IGUAL           reduce using rule 38 (factor -> ID .)
    DISTINTO        reduce using rule 38 (factor -> ID .)
    MENOR           reduce using rule 38 (factor -> ID .)
    MAYOR           reduce using rule 38 (factor -> ID .)
    MENORI          reduce using rule 38 (factor -> ID .)
    MAYORI          reduce using rule 38 (factor -> ID .)
    SUMA            reduce using rule 38 (factor -> ID .)
    MENOS           reduce using rule 38 (factor -> ID .)
    $end            reduce using rule 38 (factor -> ID .)
    PUNTOCOMA       reduce using rule 38 (factor -> ID .)
    GG              reduce using rule 38 (factor -> ID .)
    LLAVED          reduce using rule 38 (factor -> ID .)
    LLAVEI          reduce using rule 38 (factor -> ID .)
    PARENTD         reduce using rule 38 (factor -> ID .)


state 44

    (39) factor -> NUMERO .

    MULTI           reduce using rule 39 (factor -> NUMERO .)
    DIVIDIR         reduce using rule 39 (factor -> NUMERO .)
    IGUAL           reduce using rule 39 (factor -> NUMERO .)
    DISTINTO        reduce using rule 39 (factor -> NUMERO .)
    MENOR           reduce using rule 39 (factor -> NUMERO .)
    MAYOR           reduce using rule 39 (factor -> NUMERO .)
    MENORI          reduce using rule 39 (factor -> NUMERO .)
    MAYORI          reduce using rule 39 (factor -> NUMERO .)
    SUMA            reduce using rule 39 (factor -> NUMERO .)
    MENOS           reduce using rule 39 (factor -> NUMERO .)
    $end            reduce using rule 39 (factor -> NUMERO .)
    PUNTOCOMA       reduce using rule 39 (factor -> NUMERO .)
    GG              reduce using rule 39 (factor -> NUMERO .)
    LLAVED          reduce using rule 39 (factor -> NUMERO .)
    LLAVEI          reduce using rule 39 (factor -> NUMERO .)
    PARENTD         reduce using rule 39 (factor -> NUMERO .)


state 45

    (40) factor -> PARENTI . expression PARENTD
    (29) expression -> . term
    (30) expression -> . addingOperator term
    (31) expression -> . expression addingOperator term
    (34) term -> . factor
    (35) term -> . term multiplyingOperator factor
    (32) addingOperator -> . SUMA
    (33) addingOperator -> . MENOS
    (38) factor -> . ID
    (39) factor -> . NUMERO
    (40) factor -> . PARENTI expression PARENTD

    SUMA            shift and go to state 41
    MENOS           shift and go to state 42
    ID              shift and go to state 43
    NUMERO          shift and go to state 44
    PARENTI         shift and go to state 45

    expression                     shift and go to state 67
    term                           shift and go to state 38
    addingOperator                 shift and go to state 39
    factor                         shift and go to state 40

state 46

    (17) statement -> MIENTRAS condition . LLAVEI statement LLAVED

    LLAVEI          shift and go to state 68


state 47

    (10) identList -> identList COMA ID .

    PUNTOCOMA       reduce using rule 10 (identList -> identList COMA ID .)
    COMA            reduce using rule 10 (identList -> identList COMA ID .)


state 48

    (6) constAssignmentList -> constAssignmentList COMA ID ACTUALI . NUMERO

    NUMERO          shift and go to state 69


state 49

    (11) procDec1 -> procDec1 MOP ID PUNTOCOMA . block PUNTOCOMA
    (2) block -> . constDec1 varDec1 procDec1 statement
    (3) constDec1 -> . DR constAssignmentList PUNTOCOMA
    (4) constDec1 -> . empty
    (41) empty -> .

    DR              shift and go to state 4
    METRO           reduce using rule 41 (empty -> .)
    MOP             reduce using rule 41 (empty -> .)
    ID              reduce using rule 41 (empty -> .)
    KNT             reduce using rule 41 (empty -> .)
    HF              reduce using rule 41 (empty -> .)
    YF              reduce using rule 41 (empty -> .)
    MIENTRAS        reduce using rule 41 (empty -> .)
    PUNTOCOMA       reduce using rule 41 (empty -> .)

    block                          shift and go to state 70
    constDec1                      shift and go to state 3
    empty                          shift and go to state 5

state 50

    (13) statement -> ID ACTUALI expression .
    (31) expression -> expression . addingOperator term
    (32) addingOperator -> . SUMA
    (33) addingOperator -> . MENOS

    $end            reduce using rule 13 (statement -> ID ACTUALI expression .)
    PUNTOCOMA       reduce using rule 13 (statement -> ID ACTUALI expression .)
    GG              reduce using rule 13 (statement -> ID ACTUALI expression .)
    LLAVED          reduce using rule 13 (statement -> ID ACTUALI expression .)
    SUMA            shift and go to state 41
    MENOS           shift and go to state 42

    addingOperator                 shift and go to state 56

state 51

    (15) statement -> HF statementList GG .

    $end            reduce using rule 15 (statement -> HF statementList GG .)
    PUNTOCOMA       reduce using rule 15 (statement -> HF statementList GG .)
    GG              reduce using rule 15 (statement -> HF statementList GG .)
    LLAVED          reduce using rule 15 (statement -> HF statementList GG .)


state 52

    (20) statementList -> statementList PUNTOCOMA . statement
    (13) statement -> . ID ACTUALI expression
    (14) statement -> . KNT ID
    (15) statement -> . HF statementList GG
    (16) statement -> . YF condition LLAVEI statement LLAVED
    (17) statement -> . MIENTRAS condition LLAVEI statement LLAVED
    (18) statement -> . empty
    (41) empty -> .

    ID              shift and go to state 20
    KNT             shift and go to state 21
    HF              shift and go to state 22
    YF              shift and go to state 23
    MIENTRAS        shift and go to state 24
    GG              reduce using rule 41 (empty -> .)
    PUNTOCOMA       reduce using rule 41 (empty -> .)

    statement                      shift and go to state 71
    empty                          shift and go to state 25

state 53

    (16) statement -> YF condition LLAVEI . statement LLAVED
    (13) statement -> . ID ACTUALI expression
    (14) statement -> . KNT ID
    (15) statement -> . HF statementList GG
    (16) statement -> . YF condition LLAVEI statement LLAVED
    (17) statement -> . MIENTRAS condition LLAVEI statement LLAVED
    (18) statement -> . empty
    (41) empty -> .

    ID              shift and go to state 20
    KNT             shift and go to state 21
    HF              shift and go to state 22
    YF              shift and go to state 23
    MIENTRAS        shift and go to state 24
    LLAVED          reduce using rule 41 (empty -> .)

    statement                      shift and go to state 72
    empty                          shift and go to state 25

state 54

    (21) condition -> IMPAR expression .
    (31) expression -> expression . addingOperator term
    (32) addingOperator -> . SUMA
    (33) addingOperator -> . MENOS

    LLAVEI          reduce using rule 21 (condition -> IMPAR expression .)
    SUMA            shift and go to state 41
    MENOS           shift and go to state 42

    addingOperator                 shift and go to state 56

state 55

    (22) condition -> expression relation . expression
    (29) expression -> . term
    (30) expression -> . addingOperator term
    (31) expression -> . expression addingOperator term
    (34) term -> . factor
    (35) term -> . term multiplyingOperator factor
    (32) addingOperator -> . SUMA
    (33) addingOperator -> . MENOS
    (38) factor -> . ID
    (39) factor -> . NUMERO
    (40) factor -> . PARENTI expression PARENTD

    SUMA            shift and go to state 41
    MENOS           shift and go to state 42
    ID              shift and go to state 43
    NUMERO          shift and go to state 44
    PARENTI         shift and go to state 45

    expression                     shift and go to state 73
    term                           shift and go to state 38
    addingOperator                 shift and go to state 39
    factor                         shift and go to state 40

state 56

    (31) expression -> expression addingOperator . term
    (34) term -> . factor
    (35) term -> . term multiplyingOperator factor
    (38) factor -> . ID
    (39) factor -> . NUMERO
    (40) factor -> . PARENTI expression PARENTD

    ID              shift and go to state 43
    NUMERO          shift and go to state 44
    PARENTI         shift and go to state 45

    term                           shift and go to state 74
    factor                         shift and go to state 40

state 57

    (23) relation -> IGUAL .

    SUMA            reduce using rule 23 (relation -> IGUAL .)
    MENOS           reduce using rule 23 (relation -> IGUAL .)
    ID              reduce using rule 23 (relation -> IGUAL .)
    NUMERO          reduce using rule 23 (relation -> IGUAL .)
    PARENTI         reduce using rule 23 (relation -> IGUAL .)


state 58

    (24) relation -> DISTINTO .

    SUMA            reduce using rule 24 (relation -> DISTINTO .)
    MENOS           reduce using rule 24 (relation -> DISTINTO .)
    ID              reduce using rule 24 (relation -> DISTINTO .)
    NUMERO          reduce using rule 24 (relation -> DISTINTO .)
    PARENTI         reduce using rule 24 (relation -> DISTINTO .)


state 59

    (25) relation -> MENOR .

    SUMA            reduce using rule 25 (relation -> MENOR .)
    MENOS           reduce using rule 25 (relation -> MENOR .)
    ID              reduce using rule 25 (relation -> MENOR .)
    NUMERO          reduce using rule 25 (relation -> MENOR .)
    PARENTI         reduce using rule 25 (relation -> MENOR .)


state 60

    (26) relation -> MAYOR .

    SUMA            reduce using rule 26 (relation -> MAYOR .)
    MENOS           reduce using rule 26 (relation -> MAYOR .)
    ID              reduce using rule 26 (relation -> MAYOR .)
    NUMERO          reduce using rule 26 (relation -> MAYOR .)
    PARENTI         reduce using rule 26 (relation -> MAYOR .)


state 61

    (27) relation -> MENORI .

    SUMA            reduce using rule 27 (relation -> MENORI .)
    MENOS           reduce using rule 27 (relation -> MENORI .)
    ID              reduce using rule 27 (relation -> MENORI .)
    NUMERO          reduce using rule 27 (relation -> MENORI .)
    PARENTI         reduce using rule 27 (relation -> MENORI .)


state 62

    (28) relation -> MAYORI .

    SUMA            reduce using rule 28 (relation -> MAYORI .)
    MENOS           reduce using rule 28 (relation -> MAYORI .)
    ID              reduce using rule 28 (relation -> MAYORI .)
    NUMERO          reduce using rule 28 (relation -> MAYORI .)
    PARENTI         reduce using rule 28 (relation -> MAYORI .)


state 63

    (35) term -> term multiplyingOperator . factor
    (38) factor -> . ID
    (39) factor -> . NUMERO
    (40) factor -> . PARENTI expression PARENTD

    ID              shift and go to state 43
    NUMERO          shift and go to state 44
    PARENTI         shift and go to state 45

    factor                         shift and go to state 75

state 64

    (36) multiplyingOperator -> MULTI .

    ID              reduce using rule 36 (multiplyingOperator -> MULTI .)
    NUMERO          reduce using rule 36 (multiplyingOperator -> MULTI .)
    PARENTI         reduce using rule 36 (multiplyingOperator -> MULTI .)


state 65

    (37) multiplyingOperator -> DIVIDIR .

    ID              reduce using rule 37 (multiplyingOperator -> DIVIDIR .)
    NUMERO          reduce using rule 37 (multiplyingOperator -> DIVIDIR .)
    PARENTI         reduce using rule 37 (multiplyingOperator -> DIVIDIR .)


state 66

    (30) expression -> addingOperator term .
    (35) term -> term . multiplyingOperator factor
    (36) multiplyingOperator -> . MULTI
    (37) multiplyingOperator -> . DIVIDIR

    IGUAL           reduce using rule 30 (expression -> addingOperator term .)
    DISTINTO        reduce using rule 30 (expression -> addingOperator term .)
    MENOR           reduce using rule 30 (expression -> addingOperator term .)
    MAYOR           reduce using rule 30 (expression -> addingOperator term .)
    MENORI          reduce using rule 30 (expression -> addingOperator term .)
    MAYORI          reduce using rule 30 (expression -> addingOperator term .)
    SUMA            reduce using rule 30 (expression -> addingOperator term .)
    MENOS           reduce using rule 30 (expression -> addingOperator term .)
    $end            reduce using rule 30 (expression -> addingOperator term .)
    PUNTOCOMA       reduce using rule 30 (expression -> addingOperator term .)
    GG              reduce using rule 30 (expression -> addingOperator term .)
    LLAVED          reduce using rule 30 (expression -> addingOperator term .)
    LLAVEI          reduce using rule 30 (expression -> addingOperator term .)
    PARENTD         reduce using rule 30 (expression -> addingOperator term .)
    MULTI           shift and go to state 64
    DIVIDIR         shift and go to state 65

    multiplyingOperator            shift and go to state 63

state 67

    (40) factor -> PARENTI expression . PARENTD
    (31) expression -> expression . addingOperator term
    (32) addingOperator -> . SUMA
    (33) addingOperator -> . MENOS

    PARENTD         shift and go to state 76
    SUMA            shift and go to state 41
    MENOS           shift and go to state 42

    addingOperator                 shift and go to state 56

state 68

    (17) statement -> MIENTRAS condition LLAVEI . statement LLAVED
    (13) statement -> . ID ACTUALI expression
    (14) statement -> . KNT ID
    (15) statement -> . HF statementList GG
    (16) statement -> . YF condition LLAVEI statement LLAVED
    (17) statement -> . MIENTRAS condition LLAVEI statement LLAVED
    (18) statement -> . empty
    (41) empty -> .

    ID              shift and go to state 20
    KNT             shift and go to state 21
    HF              shift and go to state 22
    YF              shift and go to state 23
    MIENTRAS        shift and go to state 24
    LLAVED          reduce using rule 41 (empty -> .)

    statement                      shift and go to state 77
    empty                          shift and go to state 25

state 69

    (6) constAssignmentList -> constAssignmentList COMA ID ACTUALI NUMERO .

    PUNTOCOMA       reduce using rule 6 (constAssignmentList -> constAssignmentList COMA ID ACTUALI NUMERO .)
    COMA            reduce using rule 6 (constAssignmentList -> constAssignmentList COMA ID ACTUALI NUMERO .)


state 70

    (11) procDec1 -> procDec1 MOP ID PUNTOCOMA block . PUNTOCOMA

    PUNTOCOMA       shift and go to state 78


state 71

    (20) statementList -> statementList PUNTOCOMA statement .

    GG              reduce using rule 20 (statementList -> statementList PUNTOCOMA statement .)
    PUNTOCOMA       reduce using rule 20 (statementList -> statementList PUNTOCOMA statement .)


state 72

    (16) statement -> YF condition LLAVEI statement . LLAVED

    LLAVED          shift and go to state 79


state 73

    (22) condition -> expression relation expression .
    (31) expression -> expression . addingOperator term
    (32) addingOperator -> . SUMA
    (33) addingOperator -> . MENOS

    LLAVEI          reduce using rule 22 (condition -> expression relation expression .)
    SUMA            shift and go to state 41
    MENOS           shift and go to state 42

    addingOperator                 shift and go to state 56

state 74

    (31) expression -> expression addingOperator term .
    (35) term -> term . multiplyingOperator factor
    (36) multiplyingOperator -> . MULTI
    (37) multiplyingOperator -> . DIVIDIR

    IGUAL           reduce using rule 31 (expression -> expression addingOperator term .)
    DISTINTO        reduce using rule 31 (expression -> expression addingOperator term .)
    MENOR           reduce using rule 31 (expression -> expression addingOperator term .)
    MAYOR           reduce using rule 31 (expression -> expression addingOperator term .)
    MENORI          reduce using rule 31 (expression -> expression addingOperator term .)
    MAYORI          reduce using rule 31 (expression -> expression addingOperator term .)
    SUMA            reduce using rule 31 (expression -> expression addingOperator term .)
    MENOS           reduce using rule 31 (expression -> expression addingOperator term .)
    $end            reduce using rule 31 (expression -> expression addingOperator term .)
    PUNTOCOMA       reduce using rule 31 (expression -> expression addingOperator term .)
    GG              reduce using rule 31 (expression -> expression addingOperator term .)
    LLAVED          reduce using rule 31 (expression -> expression addingOperator term .)
    LLAVEI          reduce using rule 31 (expression -> expression addingOperator term .)
    PARENTD         reduce using rule 31 (expression -> expression addingOperator term .)
    MULTI           shift and go to state 64
    DIVIDIR         shift and go to state 65

    multiplyingOperator            shift and go to state 63

state 75

    (35) term -> term multiplyingOperator factor .

    MULTI           reduce using rule 35 (term -> term multiplyingOperator factor .)
    DIVIDIR         reduce using rule 35 (term -> term multiplyingOperator factor .)
    IGUAL           reduce using rule 35 (term -> term multiplyingOperator factor .)
    DISTINTO        reduce using rule 35 (term -> term multiplyingOperator factor .)
    MENOR           reduce using rule 35 (term -> term multiplyingOperator factor .)
    MAYOR           reduce using rule 35 (term -> term multiplyingOperator factor .)
    MENORI          reduce using rule 35 (term -> term multiplyingOperator factor .)
    MAYORI          reduce using rule 35 (term -> term multiplyingOperator factor .)
    SUMA            reduce using rule 35 (term -> term multiplyingOperator factor .)
    MENOS           reduce using rule 35 (term -> term multiplyingOperator factor .)
    $end            reduce using rule 35 (term -> term multiplyingOperator factor .)
    PUNTOCOMA       reduce using rule 35 (term -> term multiplyingOperator factor .)
    GG              reduce using rule 35 (term -> term multiplyingOperator factor .)
    LLAVED          reduce using rule 35 (term -> term multiplyingOperator factor .)
    LLAVEI          reduce using rule 35 (term -> term multiplyingOperator factor .)
    PARENTD         reduce using rule 35 (term -> term multiplyingOperator factor .)


state 76

    (40) factor -> PARENTI expression PARENTD .

    MULTI           reduce using rule 40 (factor -> PARENTI expression PARENTD .)
    DIVIDIR         reduce using rule 40 (factor -> PARENTI expression PARENTD .)
    IGUAL           reduce using rule 40 (factor -> PARENTI expression PARENTD .)
    DISTINTO        reduce using rule 40 (factor -> PARENTI expression PARENTD .)
    MENOR           reduce using rule 40 (factor -> PARENTI expression PARENTD .)
    MAYOR           reduce using rule 40 (factor -> PARENTI expression PARENTD .)
    MENORI          reduce using rule 40 (factor -> PARENTI expression PARENTD .)
    MAYORI          reduce using rule 40 (factor -> PARENTI expression PARENTD .)
    SUMA            reduce using rule 40 (factor -> PARENTI expression PARENTD .)
    MENOS           reduce using rule 40 (factor -> PARENTI expression PARENTD .)
    $end            reduce using rule 40 (factor -> PARENTI expression PARENTD .)
    PUNTOCOMA       reduce using rule 40 (factor -> PARENTI expression PARENTD .)
    GG              reduce using rule 40 (factor -> PARENTI expression PARENTD .)
    LLAVED          reduce using rule 40 (factor -> PARENTI expression PARENTD .)
    LLAVEI          reduce using rule 40 (factor -> PARENTI expression PARENTD .)
    PARENTD         reduce using rule 40 (factor -> PARENTI expression PARENTD .)


state 77

    (17) statement -> MIENTRAS condition LLAVEI statement . LLAVED

    LLAVED          shift and go to state 80


state 78

    (11) procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .

    MOP             reduce using rule 11 (procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .)
    ID              reduce using rule 11 (procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .)
    KNT             reduce using rule 11 (procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .)
    HF              reduce using rule 11 (procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .)
    YF              reduce using rule 11 (procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .)
    MIENTRAS        reduce using rule 11 (procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .)
    $end            reduce using rule 11 (procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 11 (procDec1 -> procDec1 MOP ID PUNTOCOMA block PUNTOCOMA .)


state 79

    (16) statement -> YF condition LLAVEI statement LLAVED .

    $end            reduce using rule 16 (statement -> YF condition LLAVEI statement LLAVED .)
    PUNTOCOMA       reduce using rule 16 (statement -> YF condition LLAVEI statement LLAVED .)
    GG              reduce using rule 16 (statement -> YF condition LLAVEI statement LLAVED .)
    LLAVED          reduce using rule 16 (statement -> YF condition LLAVEI statement LLAVED .)


state 80

    (17) statement -> MIENTRAS condition LLAVEI statement LLAVED .

    $end            reduce using rule 17 (statement -> MIENTRAS condition LLAVEI statement LLAVED .)
    PUNTOCOMA       reduce using rule 17 (statement -> MIENTRAS condition LLAVEI statement LLAVED .)
    GG              reduce using rule 17 (statement -> MIENTRAS condition LLAVEI statement LLAVED .)
    LLAVED          reduce using rule 17 (statement -> MIENTRAS condition LLAVEI statement LLAVED .)

